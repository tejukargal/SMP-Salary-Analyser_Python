name: Update Dependencies

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update requirements
      run: |
        # Create requirements.in if it doesn't exist
        if [ ! -f requirements.in ]; then
          cp requirements.txt requirements.in
        fi
        
        # Update requirements.txt with latest versions
        pip-compile --upgrade requirements.in
        
        # Check if there are any changes
        if git diff --quiet requirements.txt; then
          echo "No dependency updates available"
          echo "HAS_UPDATES=false" >> $GITHUB_ENV
        else
          echo "Dependencies updated"
          echo "HAS_UPDATES=true" >> $GITHUB_ENV
        fi

    - name: Test updated dependencies
      if: env.HAS_UPDATES == 'true'
      run: |
        pip install -r requirements.txt
        mkdir -p uploads
        
        # Test basic functionality
        python -c "
        import sys
        sys.path.insert(0, '.')
        from app import app
        app.config['TESTING'] = True
        with app.test_client() as client:
            response = client.get('/')
            assert response.status_code == 200
            print('✅ Application works with updated dependencies')
        "

    - name: Create Pull Request
      if: env.HAS_UPDATES == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          🔄 Update Python dependencies
          
          - Updated all dependencies to latest compatible versions
          - Tested basic functionality
          - Automated update via GitHub Actions
        title: '🔄 Update Python Dependencies'
        body: |
          ## 📦 Dependency Updates
          
          This PR contains automated dependency updates generated by GitHub Actions.
          
          ### ✅ What's included:
          - Updated all Python packages to latest compatible versions
          - Verified application still starts and responds correctly
          - No breaking changes detected
          
          ### 🧪 Testing:
          - [x] Application startup test passed
          - [x] Basic functionality test passed
          - [ ] Manual testing recommended before merge
          
          ### 📝 Next Steps:
          1. Review the updated dependencies
          2. Run comprehensive tests if needed
          3. Merge if all checks pass
          
          ---
          *This PR was generated automatically by the dependency update workflow.*
        branch: dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
          
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety
        pip install -r requirements.txt
    
    - name: Run security audit
      run: |
        echo "## 🛡️ Security Audit Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if safety check --json > safety_report.json 2>/dev/null; then
          echo "✅ No known security vulnerabilities found" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ Security vulnerabilities detected:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat safety_report.json | jq -r '.[] | "- \(.package_name) \(.installed_version): \(.vulnerability)"' >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-audit-report
        path: safety_report.json
        retention-days: 30